CREATE TABLE employee (
  emp_id INT PRIMARY KEY,
  first_name VARCHAR (20) NOT NULL,
  last_name VARCHAR (20) NOT NULL,
  birth_date DATE,
  sex VARCHAR (1),
  salary INT,
  super_id INT,
  branch_id INT
);



CREATE TABLE branch (
    branch_id INT PRIMARY KEY,
    branch_name VARCHAR (40),
    mgr_id INT,
    mgr_start_date DATE,
    FOREIGN KEY (mgr_id) REFERENCES employee(emp_id) ON DELETE SET NULL
);
    
ALTER TABLE employee
ADD FOREIGN KEY (branch_id)
REFERENCES branch(branch_id)
ON DELETE SET NULL;


ALTER TABLE employee
ADD FOREIGN KEY (super_id)
REFERENCES employee(emp_id)
ON DELETE SET NULL;


CREATE TABLE client (
    client_id INT PRIMARY KEY,
    client_name VARCHAR(40),
    branch_id INT,
    FOREIGN KEY (branch_id) REFERENCES branch(branch_id) ON DELETE SET NULL
);
    

CREATE TABLE works_with (
    emp_id INT,
    client_id INT,
    total_sales INT,
    PRIMARY KEY (emp_id, client_id),
    FOREIGN KEY (emp_id) REFERENCES employee(emp_id) ON DELETE CASCADE,
    FOREIGN KEY (client_id) REFERENCES client(client_id) ON DELETE CASCADE
);


CREATE TABLE branch_supplier (
    branch_id INT,
    supplier_name VARCHAR(40),
    supply_type VARCHAR(40),
    PRIMARY KEY (branch_id, supplier_name),
    FOREIGN KEY (branch_id) REFERENCES branch(branch_id) ON DELETE CASCADE
);



-- Corporate
INSERT INTO employee VALUES (100, 'David', 'Wallace', '1967-11-17', 'M', 250000, NULL, NULL);

INSERT INTO branch Values(1, 'Corporate',100,'2006-02-09');

UPDATE employee
SET branch_id = 1
WHERE emp_id = 100;

INSERT INTO employee VALUES (101, 'Jan', 'Levinson', '1961-05-11', 'F', 110000, 100, 1);

-- Scranton
INSERT INTO employee VALUES (102, 'Michael', 'Scott', '1964-03-15', 'M', 75000, 100, NULL);

INSERT INTO branch Values(2, 'Scranton',102,'1992-04-06');

UPDATE employee
SET branch_id = 2
WHERE emp_id = 102;

INSERT INTO employee VALUES (103, 'Angela', 'Martin', '1971-06-25', 'F', 63000,102,2);
INSERT INTO employee VALUES (104, 'Kelly', 'Kapoor', '1980-02-05','F',55000,102,2);
INSERT INTO employee VALUES (105, 'Stanley','Hudson','1958-02-19','M',69000,102,2);

-- Stamford
INSERT INTO employee VALUES (106,'Josh','Porter','1969-09-05','M',78000,100,NULL);

INSERT INTO branch Values (3,'Stamford',106,'1998-02-13');

UPDATE employee
SET branch_id = 3
WHERE emp_id = 106;

INSERT INTO employee VALUES (107,'Andy','Bernard','1973-07-22', 'M',65000,106,3);
INSERT INTO employee VALUES (108,'Jim','Halpert','1978-10-01','M',71000,106,3);

-- Buffalo
INSERT INTO branch VALUES (4, 'Buffalo',NULL,NULL);

-- Branch supplier_name
INSERT INTO branch_supplier VALUES (2,'Hammer Mill','Paper');
INSERT INTO branch_supplier VALUES (2, 'Uni-ball','Writing Utensils');
INSERT INTO branch_supplier VALUES (3, 'Patriot Paper','Paper');
INSERT INTO branch_supplier VALUES (2, 'J.T. Forms & Labels','Custom Forms');
INSERT INTO branch_supplier VALUES (3, 'Hammer Mill', 'Paper');
INSERT INTO branch_supplier VALUES (3, 'Stamford Lables', 'Custom Forms');

-- client 
INSERT INTO client Values (400,'Dunmore Highschool',2);
INSERT INTO client Values (401, 'Lackawana Country',2);
INSERT INTO client Values (402, 'FedEx',3);
INSERT INTO client Values (403, 'John Daly Law, LLC',3);
INSERT INTO client Values (404, 'Scranton Whitepages',2);
INSERT INTO client Values (405, 'Times Newspaper',3);
INSERT INTO client Values (406, 'FedEx',2);

-- Works_With 
INSERT INTO works_with VALUES (105, 400, 55000);
INSERT INTO works_with VALUES (102, 401, 267000);
INSERT INTO works_with VALUES (108, 402, 22500);
INSERT INTO works_with VALUES (107,403,5000);
INSERT INTO works_with VALUES (108,403,12000);
INSERT INTO works_with VALUES (105,404,33000);
INSERT INTO works_with VALUES (107,405,26000);
INSERT INTO works_with VALUES (102,406,15000);
INSERT INTO works_with VALUES (105,406,130000);

-- Find the number of employees

/*
SELECT COUNT(emp_id) AS 'number of' FROM employee;
*/

-- Find the number of female employees born after 1970 
/*
SELECT COUNT(emp_id)
FROM employee 
WHERE sex = 'F' AND birth_date > '1971-01-01';
*/

-- Find the average of all employee's salaries
/*
SELECT AVG(salary)
FROM employee;
*/

-- Find out how many males and females there are
/*
SELECT COUNT(sex) AS count, sex
FROM employee
GROUP BY sex;
*/

-- Find the total sales of each salesman

/*
SELECT SUM(total_sales) AS sales, emp_id
FROM works_with
GROUP BY emp_id
ORDER BY sales DESC;
*/

-- % = any # characters, _ = one character
-- Find any client's who are an LLC
/*
SELECT *
FROM client
WHERE client_name LIKE '%LLC%';
*/

-- Find any employee born in October
/*
SELECT *
FROM employee 
WHERE birth_date LIKE '____-10%';
*/

-- find a list of employee and branch names
/*
SELECT first_name
FROM employee
UNION 
SELECT branch_name
FROM branch;
*/

-- find a list of all clients and branch suppliers' names
/*
SELECT client_name, client.branch_id
FROM client
UNION
SELECT supplier_name, branch_supplier.branch_id
FROM branch_supplier;
*/

-- find a list of all money spent or earned by the company
/*
SELECT salary AS 'money'
FROM employee
UNION
SELECT total_sales
FROM works_with
ORDER BY money DESC;
*/

-- JOINS
-- find a list of all branch managers and what branches they manage including their salaries
/*
SELECT employee.emp_id, employee.first_name, branch.branch_name, employee.salary
FROM employee
JOIN branch
ON employee.emp_id = branch.mgr_id;
*/


-- nested queries
-- find names of all employees who have sold over 30k to a single client 

/* as a join

SELECT employee.first_name, employee.last_name, works_with.total_sales, works_with.client_id
FROM employee
JOIN works_with
ON employee.emp_id = works_with.emp_id
WHERE works_with.total_sales > 30000
ORDER BY works_with.total_sales DESC;
*/

/* using nested query

SELECT employee.first_name,employee.last_name
FROM employee
WHERE employee.emp_id IN (
    SELECT works_with.emp_id
    FROM works_with
    WHERE works_with.total_sales > 30000
);
*/

-- Find all clients who are handled by the branch that michael scott manages 
-- Assume you know Michael's ID 


SELECT client.client_name
FROM client 
WHERE client.branch_id = (
    SELECT branch.branch_id
    FROM branch 
    WHERE branch.mgr_id = 102
    LIMIT 1
);
